version: '3'
services:
  postgres:
    image: postgres:15.3-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=technow
      - POSTGRES_USER=technow
      - POSTGRES_PASSWORD=technow
    networks:
      - minionetwork

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://technow:technow@postgres:5432/technow?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - minionetwork

  minio:
    image: bitnami/minio:2024.2.26
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minionetwork
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_PROMETHEUS_AUTH_TYPE=public
    expose:
      - "9000"
      - "9001"

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./core/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./core/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./core/provisioning/dashboards/sources:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    environment:
      - DS_PROMETHEUS=http://prometheus:9090
    networks:
      - minionetwork

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    networks:
      - minionetwork
    volumes:
      - ./core/src/main/resources/prometheus.yml:/etc/prometheus/prometheus.yml
      # Grafana binding: http://prometheus:9090

  loki:
    container_name: loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - minionetwork
    # Grafana binding:  http://loki:3100

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - ./core/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - minionetwork

    # Chroma Server
  server:
    image: ghcr.io/chroma-core/chroma:0.6.3
    container_name: chroma_server
    environment:
      - IS_PERSISTENT=TRUE
    volumes:
      - chroma-data:/chroma/chroma/
    ports:
      - 8000:8000

#  rag_module:
#    image: calinmarius/rag_module:1.0
#    container_name: rag_module
#    environment:
#      - IS_DOCKER=TRUE
#    ports:
#      - 5000:5000
#    networks:
#      - minionetwork

networks:
  minionetwork:
    driver: bridge

volumes:
  minio_data:
    driver: local
  grafana_data:
    driver: local
  chroma-data:
    driver: local
