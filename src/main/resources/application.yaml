# Spring
spring:
  application:
    name: TechNow
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/technow}
    username: ${SPRING_DATASOURCE_USERNAME:technow}
    password: ${SPRING_DATASOURCE_PASSWORD:technow}
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
# Mail
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
# Jpa
  jpa:
    show-sql: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
    hibernate:
      ddl-auto: update
    open-in-view: false

  # Enable virtual threads
  threads:
    virtual:
      enabled: true
  #Kafka
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cID

# Cors
custom:
  frontend:
    app-url: ${FRONTEND_URL:http://localhost:4173}
  default_buckets: photos, userphotos
  fromEmail: ${FROM_EMAIL}
  enableMailService: false
  remindersSchedulerTime: 5000
  admin_email: chelceacalin1@gmail.com
  kafka_topics: BOOK_RETURNED
  kafka.enabled: true
  python-url: ${PYTHON_URL:http://localhost:5000}

# Minio
minio:
  url: ${MINIO_URL:http://localhost:9000}
  access:
    key: ${MINIO_ACCESS_KEY:admin}
  secret:
    key: ${MINIO_SECRET_KEY:password}


# Api Documentation
springdoc:
  api-docs:
    path: /api-docs


# Actuator config
management:
  server:
    port: 8081
  endpoint:
    health:
      group:
        readiness:
          include:
            - db
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
      maximum-expected-value:
        http:
          server:
            requests: 5s


# Logging
logging:
  level:
    com:
      example: info


